*{
	margin: 0;
	padding: 0;
}


body{
	width: 100%;
	height: 100vh;
	/*设置段落生成一个行内框*/
	/*flex:让所有弹性盒模型对象的子元素都有相同的长度，且忽略它们内部的内容*/
	display: flex;
	/*在弹性盒对象的<div>元素中的各项周围留有空白*/
	justify-content: center;
	/*居中对齐弹性盒的各项<div>元素*/
	align-items: center;
	background-color: #efeeee;
}


.container{
	width: 700px;
	height: 600px;
	display: flex;
	/*space-around:项目位于各行之前、之间、之后都留有空白的容器内。*/
	justify-content: space-around;
	/*让弹性盒元素在必要的时候拆行*/
	/*wrap:规定灵活的项目在必要的时候拆行或拆列;*/
	flex-wrap: wrap;
	align-items: center;
}

.coneainer .box{
	display: flex;
	justify-content: space-around;
	/*设置 <div> 元素内弹性盒元素的方向为相反的顺序*/
	/*column:灵活的项目将垂直显示，正如一个列一样*/
	flex-direction: column;
	align-items: center;
	/*对齐弹性盒的 <div> 元素的各项*/
	align-content: center;
	width: 100px;
	height: 140px;
	margin: 20px;
}


.container .box .img{
	width: 100px;
	height: 100px;
	/*向 div 元素添加阴影。右，下，模糊程度。*/
	box-shadow: 18px 18px 30px rgba(0,0,0,0.1),
	-18px -18px 30px rgba(255,255,255,1);
	/*给div元素添加圆角的边框*/
	border-radius: 20px;
	display: flex;
	align-items: center;
	justify-content: center;
	background-color: #efeeee;
	/*将鼠标悬停在一个 div 元素上，逐步改变表格的宽度*/
	/*ease-in-out:规定以慢速开始和结束的过渡效果*/
	transition: box-shadow .2s ease-in-out;
	/*定位元素*/
	/*relative：生成相对定位的元素，相对于其正常位置进行定位*/
	position: relative;
}


.container .box .img img{
	width: 60px;
	/*ease-out:规定以慢速结束的过渡效果*/
	transition: width .2s ease-out;
}


.container .box p{
	color: slategray;
}


.container .box .img:hover{
	box-shadow: 0px 0px 0px rgba(0,0,0,0.1),
	0px 0px 0px rgba(255,255,255,1),
	inset 18px 18px 30px rgba(0,0,0,0.1),
	inset -18px -18px 30px rgba(255,255,255,1);
	transition: box-shadow .2s ease-out;
}


.container .box .img:hover img{
	width: 58px;
	transition: width .2s ease-out;
}
